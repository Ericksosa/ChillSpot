// <auto-generated />
using System;
using ChillSpot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChillSpot.Migrations
{
    [DbContext(typeof(chillSpotDbContext))]
    [Migration("20250705021821_Create-Database")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChillSpot.Models.Articulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("AnioEstreno")
                        .HasColumnType("int");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<long?>("GeneroId")
                        .HasColumnType("bigint")
                        .HasColumnName("Genero_Id");

                    b.Property<long?>("IdiomaId")
                        .HasColumnType("bigint")
                        .HasColumnName("Idioma_Id");

                    b.Property<decimal?>("MontoEntregaTardia")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<string>("PortadaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PortadaURL");

                    b.Property<decimal?>("RentaXdia")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("RentaXDia");

                    b.Property<string>("RutaUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RutaURL");

                    b.Property<string>("Sinopsis")
                        .HasColumnType("text");

                    b.Property<long?>("TipoArticuloId")
                        .HasColumnType("bigint")
                        .HasColumnName("TipoArticulo_Id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Articulo__3213E83F60C1242E");

                    b.HasIndex("EstadoId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("IdiomaId");

                    b.HasIndex("TipoArticuloId");

                    b.ToTable("Articulo", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.ArticuloElenco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticuloId")
                        .HasColumnType("bigint")
                        .HasColumnName("Articulo_Id");

                    b.Property<long?>("ElencoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Elenco_Id");

                    b.Property<int?>("RolEnArticulo")
                        .HasColumnType("int")
                        .HasColumnName("RolEn_Articulo");

                    b.HasKey("Id")
                        .HasName("PK__Articulo__3213E83F1689B72A");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ElencoId");

                    b.ToTable("ArticuloElenco", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cedula")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<decimal?>("LimiteCredito")
                        .HasColumnType("decimal(12, 2)")
                        .HasColumnName("limiteCredito");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TarjetaCr")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TipoPersona")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("Usuario_Id");

                    b.HasKey("Id")
                        .HasName("PK__Cliente__3213E83F90DB1ECF");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Descuento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long?>("EmpleadoCreadorId")
                        .HasColumnType("bigint")
                        .HasColumnName("EmpleadoCreador_Id");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<int>("MontoCobertura")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Descuent__3213E83F50491C77");

                    b.HasIndex("EmpleadoCreadorId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Descuento", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Devolucion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateOnly>("FechaDevolucion")
                        .HasColumnType("date");

                    b.Property<long>("PenalizacionId")
                        .HasColumnType("bigint")
                        .HasColumnName("Penalizacion_Id");

                    b.Property<long>("ReservaId")
                        .HasColumnType("bigint")
                        .HasColumnName("Reserva_Id");

                    b.HasKey("Id")
                        .HasName("PK__Devoluci__3213E83FA31BA99E");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PenalizacionId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Devolucion", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Elenco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("RolProfesionalId")
                        .HasColumnType("bigint")
                        .HasColumnName("RolProfesional_Id");

                    b.HasKey("Id")
                        .HasName("PK__Elenco__3213E83F0A6716A8");

                    b.HasIndex("RolProfesionalId");

                    b.ToTable("Elenco", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Empleado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("Cedula")
                        .HasColumnType("bigint");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("PorcientoComision")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("TandaLabor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("Usuario_Id");

                    b.HasKey("Id")
                        .HasName("PK__Empleado__3213E83F9B3A782B");

                    b.HasIndex("EstadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Empleado", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Estado__3213E83F710AAB31");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Genero", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Genero__3213E83FA292C541");

                    b.HasIndex("EstadoId");

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Idioma", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Idioma__3213E83FE876D2EF");

                    b.HasIndex("EstadoId");

                    b.ToTable("Idioma", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Mensaje", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Mensajes__3213E83F7DF2BB37");

                    b.HasIndex("EstadoId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("ChillSpot.Models.MetodoPago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__MetodoPa__3213E83F54BC56F9");

                    b.HasIndex("EstadoId");

                    b.ToTable("MetodoPago", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Pago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Cvv")
                        .HasColumnType("int")
                        .HasColumnName("CVV");

                    b.Property<long?>("DescuentoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Descuento_Id");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<long>("FechaVencimientoTarjeta")
                        .HasColumnType("bigint");

                    b.Property<long?>("MetodoPagoId")
                        .HasColumnType("bigint")
                        .HasColumnName("MetodoPago_Id");

                    b.Property<decimal>("MontoApagar")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("MontoAPagar");

                    b.Property<string>("NombreDuenioTarjeta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("NumTarjeta")
                        .HasColumnType("bigint");

                    b.Property<long?>("RedPagoId")
                        .HasColumnType("bigint")
                        .HasColumnName("RedPago_Id");

                    b.HasKey("Id")
                        .HasName("PK__Pago__3213E83FD69EEE69");

                    b.HasIndex("DescuentoId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("RedPagoId");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Penalizacion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Penaliza__3213E83F7D8DECEB");

                    b.HasIndex("EstadoId");

                    b.ToTable("Penalizacion", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.RedPago", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__RedPago__3213E83F54AD491F");

                    b.ToTable("RedPago", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Renta", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaVencimiento")
                        .HasColumnType("date");

                    b.Property<long>("ReservaId")
                        .HasColumnType("bigint")
                        .HasColumnName("Reserva_Id");

                    b.HasKey("Id")
                        .HasName("PK__Renta__3213E83FDC2286B9");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("Renta");
                });

            modelBuilder.Entity("ChillSpot.Models.Reserva", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticuloId")
                        .HasColumnType("bigint")
                        .HasColumnName("Articulo_Id");

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("Cliente_Id");

                    b.Property<int?>("DuracionReserva")
                        .HasColumnType("int");

                    b.Property<long?>("EmpleadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Empleado_Id");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateOnly?>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<long?>("IdDescuento")
                        .HasColumnType("bigint")
                        .HasColumnName("Id_Descuento");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("PenalizacionId")
                        .HasColumnType("bigint")
                        .HasColumnName("Penalizacion_Id");

                    b.HasKey("Id")
                        .HasName("PK__Reserva__3213E83FB3CE72F4");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("IdDescuento");

                    b.HasIndex("PenalizacionId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.ReservaArticulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ArticuloId")
                        .HasColumnType("bigint")
                        .HasColumnName("Articulo_Id");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<DateOnly?>("FechaDevolucion")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaReserva")
                        .HasColumnType("date");

                    b.Property<long?>("ReservaId")
                        .HasColumnType("bigint")
                        .HasColumnName("Reserva_Id");

                    b.HasKey("Id")
                        .HasName("PK__ReservaA__3213E83F14413BC6");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ReservaId");

                    b.ToTable("ReservaArticulo", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Rol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Rol__3213E83FB4449602");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.RolProfesional", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__RolProfe__3213E83F80198EB5");

                    b.HasIndex("EstadoId");

                    b.ToTable("RolProfesional", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.TipoArticulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<long?>("EstadoId")
                        .HasColumnType("bigint")
                        .HasColumnName("Estado_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__TipoArti__3213E83FF9924040");

                    b.HasIndex("EstadoId");

                    b.ToTable("TipoArticulo", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Clave")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("RolId")
                        .HasColumnType("bigint")
                        .HasColumnName("Rol_Id");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3213E83F46B5B3AC");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ChillSpot.Models.Articulo", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Articulos")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Articulo_Estado");

                    b.HasOne("ChillSpot.Models.Genero", "Genero")
                        .WithMany("Articulos")
                        .HasForeignKey("GeneroId")
                        .HasConstraintName("FK_Articulo_Genero");

                    b.HasOne("ChillSpot.Models.Idioma", "Idioma")
                        .WithMany("Articulos")
                        .HasForeignKey("IdiomaId")
                        .HasConstraintName("FK_Articulo_Idioma");

                    b.HasOne("ChillSpot.Models.TipoArticulo", "TipoArticulo")
                        .WithMany("Articulos")
                        .HasForeignKey("TipoArticuloId")
                        .HasConstraintName("FK_Articulo_TipoArticulo");

                    b.Navigation("Estado");

                    b.Navigation("Genero");

                    b.Navigation("Idioma");

                    b.Navigation("TipoArticulo");
                });

            modelBuilder.Entity("ChillSpot.Models.ArticuloElenco", b =>
                {
                    b.HasOne("ChillSpot.Models.Articulo", "Articulo")
                        .WithMany("ArticuloElencos")
                        .HasForeignKey("ArticuloId")
                        .HasConstraintName("FK_ArticuloElenco_Articulo");

                    b.HasOne("ChillSpot.Models.Elenco", "Elenco")
                        .WithMany("ArticuloElencos")
                        .HasForeignKey("ElencoId")
                        .HasConstraintName("FK_ArticuloElenco_Elenco");

                    b.Navigation("Articulo");

                    b.Navigation("Elenco");
                });

            modelBuilder.Entity("ChillSpot.Models.Cliente", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Clientes")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Cliente_Estado");

                    b.HasOne("ChillSpot.Models.Usuario", "Usuario")
                        .WithMany("Clientes")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Cliente_Usuario");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ChillSpot.Models.Descuento", b =>
                {
                    b.HasOne("ChillSpot.Models.Empleado", "EmpleadoCreador")
                        .WithMany("Descuentos")
                        .HasForeignKey("EmpleadoCreadorId")
                        .HasConstraintName("FK_Descuento_Empleado");

                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Descuentos")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Descuento_Estado");

                    b.Navigation("EmpleadoCreador");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Devolucion", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Devolucions")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Devolucion_Estado");

                    b.HasOne("ChillSpot.Models.Penalizacion", "Penalizacion")
                        .WithMany("Devolucions")
                        .HasForeignKey("PenalizacionId")
                        .IsRequired()
                        .HasConstraintName("FK_Devolucion_Penalizacion");

                    b.HasOne("ChillSpot.Models.Reserva", "Reserva")
                        .WithMany("Devolucions")
                        .HasForeignKey("ReservaId")
                        .IsRequired()
                        .HasConstraintName("FK_Devolucion_Reserva");

                    b.Navigation("Estado");

                    b.Navigation("Penalizacion");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ChillSpot.Models.Elenco", b =>
                {
                    b.HasOne("ChillSpot.Models.RolProfesional", "RolProfesional")
                        .WithMany("Elencos")
                        .HasForeignKey("RolProfesionalId")
                        .HasConstraintName("FK_Elenco_RolProfesional");

                    b.Navigation("RolProfesional");
                });

            modelBuilder.Entity("ChillSpot.Models.Empleado", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Empleados")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Empleado_Estado");

                    b.HasOne("ChillSpot.Models.Usuario", "Usuario")
                        .WithMany("Empleados")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Empleado_Usuario");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ChillSpot.Models.Genero", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Generos")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Genero_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Idioma", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Idiomas")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Idioma_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Mensaje", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Mensajes")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Mensajes_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.MetodoPago", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("MetodoPagos")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_MetodoPago_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Pago", b =>
                {
                    b.HasOne("ChillSpot.Models.Descuento", "Descuento")
                        .WithMany("Pagos")
                        .HasForeignKey("DescuentoId")
                        .HasConstraintName("FK_Pago_Descuento");

                    b.HasOne("ChillSpot.Models.Estado", "MetodoPago")
                        .WithMany("Pagos")
                        .HasForeignKey("MetodoPagoId")
                        .HasConstraintName("FK_Pago_Estado");

                    b.HasOne("ChillSpot.Models.MetodoPago", "MetodoPagoNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("MetodoPagoId")
                        .HasConstraintName("FK_Pago_MetodoPago");

                    b.HasOne("ChillSpot.Models.RedPago", "RedPago")
                        .WithMany("Pagos")
                        .HasForeignKey("RedPagoId")
                        .HasConstraintName("FK_Pago_RedPago");

                    b.Navigation("Descuento");

                    b.Navigation("MetodoPago");

                    b.Navigation("MetodoPagoNavigation");

                    b.Navigation("RedPago");
                });

            modelBuilder.Entity("ChillSpot.Models.Penalizacion", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Penalizacions")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Penalizacion_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Renta", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Renta")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Renta_Estado");

                    b.HasOne("ChillSpot.Models.Reserva", "Reserva")
                        .WithMany("Renta")
                        .HasForeignKey("ReservaId")
                        .IsRequired()
                        .HasConstraintName("FK_Renta_Reserva");

                    b.Navigation("Estado");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ChillSpot.Models.Reserva", b =>
                {
                    b.HasOne("ChillSpot.Models.Articulo", "Articulo")
                        .WithMany("Reservas")
                        .HasForeignKey("ArticuloId")
                        .HasConstraintName("FK_Reserva_Articulo");

                    b.HasOne("ChillSpot.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_Reserva_Cliente");

                    b.HasOne("ChillSpot.Models.Empleado", "Empleado")
                        .WithMany("Reservas")
                        .HasForeignKey("EmpleadoId")
                        .HasConstraintName("FK_Reserva_Empleado");

                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("Reservas")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_Reserva_Estado");

                    b.HasOne("ChillSpot.Models.Descuento", "IdDescuentoNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdDescuento")
                        .HasConstraintName("FK_Reserva_Descuento");

                    b.HasOne("ChillSpot.Models.Penalizacion", "Penalizacion")
                        .WithMany("Reservas")
                        .HasForeignKey("PenalizacionId")
                        .HasConstraintName("FK_Reserva_Penalizacion");

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");

                    b.Navigation("Estado");

                    b.Navigation("IdDescuentoNavigation");

                    b.Navigation("Penalizacion");
                });

            modelBuilder.Entity("ChillSpot.Models.ReservaArticulo", b =>
                {
                    b.HasOne("ChillSpot.Models.Articulo", "Articulo")
                        .WithMany("ReservaArticulos")
                        .HasForeignKey("ArticuloId")
                        .HasConstraintName("FK_ReservaArticulo_Articulo");

                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("ReservaArticulos")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_ReservaArticulo_Estado");

                    b.HasOne("ChillSpot.Models.Reserva", "Reserva")
                        .WithMany("ReservaArticulos")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FK_ReservaArticulo_Reserva");

                    b.Navigation("Articulo");

                    b.Navigation("Estado");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ChillSpot.Models.RolProfesional", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("RolProfesionals")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_RolProfesional_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.TipoArticulo", b =>
                {
                    b.HasOne("ChillSpot.Models.Estado", "Estado")
                        .WithMany("TipoArticulos")
                        .HasForeignKey("EstadoId")
                        .HasConstraintName("FK_TipoArticulo_Estado");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ChillSpot.Models.Usuario", b =>
                {
                    b.HasOne("ChillSpot.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_Usuario_Rol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ChillSpot.Models.Articulo", b =>
                {
                    b.Navigation("ArticuloElencos");

                    b.Navigation("ReservaArticulos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ChillSpot.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ChillSpot.Models.Descuento", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ChillSpot.Models.Elenco", b =>
                {
                    b.Navigation("ArticuloElencos");
                });

            modelBuilder.Entity("ChillSpot.Models.Empleado", b =>
                {
                    b.Navigation("Descuentos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ChillSpot.Models.Estado", b =>
                {
                    b.Navigation("Articulos");

                    b.Navigation("Clientes");

                    b.Navigation("Descuentos");

                    b.Navigation("Devolucions");

                    b.Navigation("Empleados");

                    b.Navigation("Generos");

                    b.Navigation("Idiomas");

                    b.Navigation("Mensajes");

                    b.Navigation("MetodoPagos");

                    b.Navigation("Pagos");

                    b.Navigation("Penalizacions");

                    b.Navigation("Renta");

                    b.Navigation("ReservaArticulos");

                    b.Navigation("Reservas");

                    b.Navigation("RolProfesionals");

                    b.Navigation("TipoArticulos");
                });

            modelBuilder.Entity("ChillSpot.Models.Genero", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ChillSpot.Models.Idioma", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ChillSpot.Models.MetodoPago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ChillSpot.Models.Penalizacion", b =>
                {
                    b.Navigation("Devolucions");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ChillSpot.Models.RedPago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ChillSpot.Models.Reserva", b =>
                {
                    b.Navigation("Devolucions");

                    b.Navigation("Renta");

                    b.Navigation("ReservaArticulos");
                });

            modelBuilder.Entity("ChillSpot.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ChillSpot.Models.RolProfesional", b =>
                {
                    b.Navigation("Elencos");
                });

            modelBuilder.Entity("ChillSpot.Models.TipoArticulo", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("ChillSpot.Models.Usuario", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
